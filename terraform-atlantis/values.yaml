# Atlantis Helm Chart Values - Properly override defaults
atlantisUrl: ""

# Disable default allowlists to prevent conflicts
orgAllowlist: "${github_repo_allowlist}"
orgWhitelist: ""
logLevel: ""

# Use GitHub configuration block instead of individual env vars
github:
  user: "gkorkmaz"
  token: "${github_token}"
  secret: "${github_webhook_secret}"

# Service configuration
service:
  type: ClusterIP
  port: 80

# Replica configuration  
replicaCount: ${replica_count}

# Resource configuration
resources:
  requests:
    memory: "256Mi"
    cpu: "100m"
  limits:
    memory: "1Gi"
    cpu: "500m"

# Persistent storage configuration
dataStorage: "${storage_size}"
storageClassName: "${storage_class}"

# Service account configuration
serviceAccount:
  create: false
  name: "atlantis"

# Environment variables - only set what we need
environment:
  ATLANTIS_REPO_ALLOWLIST: "${github_repo_allowlist}"
  AWS_REGION: "eu-central-1"

# Server-side configuration to allow repo overrides
config: |
  repos:
  - id: /.*/
    allowed_overrides: [workflow, apply_requirements, delete_source_branch_on_merge]
    allow_custom_workflows: true

# Ingress configuration (using ALB)
ingress:
  enabled: true
  ingressClassName: "alb"
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: "atlantis-alb"
    alb.ingress.kubernetes.io/group.name: "atlantis"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
  path: /
  pathType: Prefix

# Image configuration
image:
  repository: "ghcr.io/runatlantis/atlantis"
  tag: "v0.35.0"
  pullPolicy: "IfNotPresent"
